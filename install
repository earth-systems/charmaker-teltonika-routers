#!/bin/sh

clear
echo "."
echo "."
echo "."

# Prompt for Tailscale version to install or use default
echo "Firstly, check the Tailscale version to install, this can be found at:"
echo "https://pkgs.tailscale.com/stable/#static"
echo "Under Static Binaries > ARM"
while true; do
    read -p "Enter the Tailscale version to install (the current stable version is: 1.40.1, enter this version if unsure):" TAILSCALE_VERSION
    # Check if the Tailscale package exists using curl HEAD request
    if curl --output /dev/null --silent --head --fail "https://pkgs.tailscale.com/stable/tailscale_${TAILSCALE_VERSION}_arm.tgz"; then
        break  # Break the loop if the package exists
    else
        echo "Tailscale package version not found. Please enter a valid version."
    fi
done
echo "."
# Prompt for the Hostname:
echo "Enter the IP Address of the Teltonika router between 172.20.1.254 and 172.20.254.254:"
# Prompt for IP address input within the specified range
while true; do
    read -p "Enter an IP address (eg. 172.20.123.254): " NETWORK_ADDRESS

    # Extract the third octet using awk
    THIRD_OCTET=$(echo "$NETWORK_ADDRESS" | cut -d '.' -f 3)

    # Check if the input is a valid IP address and within the specified range
    if [ "$THIRD_OCTET" -ge 1 ] && [ "$THIRD_OCTET" -le 254 ] && [ "$NETWORK_ADDRESS" = "172.20.$THIRD_OCTET.$(echo "$NETWORK_ADDRESS" | cut -d '.' -f 4)" ]; then
        break  # Break the loop if the input is valid
    else
        echo "Invalid input. Please enter a valid IP address within the range 172.20.1.254 to 172.20.254.254."
    fi
done

# Print the details back to the user
XPP_HOSTNAME_MOD="XPP${XPP_HOSTNAME}"
clear
echo "."
echo "."
echo "."
echo "Now we are ready to install Tailscale and configure it for the Charmaker network"
echo "."
echo "Check the details below before proceeding:"
echo " - Tailscale Version to install: ${TAILSCALE_VERSION}"
echo " - Teltonika router full hostname: ${XPP_HOSTNAME_MOD}"
echo "."
echo "."
echo "."
read -n 1 -s -r -p "Press any key to proceed with the installation or CTRL+C to exit..."

# Qucik cleanup first.
rm -f "/tmp/tailscale.tgz"
rm -f "/tailscale.tgz"
rm -f "/usr/bin/tailscale"
rm -f "/usr/bin/tailscaled"
rm -f "/etc/init.d/tailscale"

# Define the GitHub repository URL for the init Tailscale startup script
GITHUB_REPO_URL="https://raw.githubusercontent.com/earthsystems-charmaker/teltonikarouters/main/serviceinit"

# Set the default dir to root and make tmp dir
cd /
# Check if 'tmp' folder exists
if [ ! -d "tmp" ]; then
    # Create the 'tmp' folder if it doesn't exist
    mkdir tmp
    echo "'tmp' folder created."
fi

echo "Downloading the Tailscale package"
curl "https://pkgs.tailscale.com/stable/tailscale_${TAILSCALE_VERSION}_arm.tgz" --output tailscale.tgz

echo "Extracting the contents of the downloaded package"
tar x -zvC /tmp -f tailscale.tgz

echo "Removing the downloaded tarball"
rm -f tailscale.tgz

echo "Copying the Tailscale binaries to /usr/bin"
cd tmp
cd "tailscale_${TAILSCALE_VERSION}_arm"
cp tailscale /usr/bin
cp tailscaled /usr/bin

echo "Setting permissions for the Tailscale binaries and the init script"
chmod 775 /usr/bin/tailscale
chmod 775 /usr/bin/tailscaled

echo "Cleaning up and removing the extracted directory to save space"
cd /
cd tmp
rm "tailscale_${TAILSCALE_VERSION}_arm" -R

echo "Downloading the initilization script from github and saving it to /etc/init.d/tailscale"
curl -L "${GITHUB_REPO_URL}" --output /etc/init.d/tailscale

echo "Setting permissions for the init script"
chmod 775 /etc/init.d/tailscale

echo "Updating package lists and installing necessary packages"
opkg update
opkg install libustream-openssl ca-bundle kmod-tun
echo "Required packages have been installed, ignore errors above for the Luci and Vuci package, and kernel errors"

echo "Appending lines to the existing /etc/config/firewall file to allow Tailscale to connect"
# First we define the block of code for the firewall config we need to set.
CONFIG_BLOCK="
config zone
    option device 'tailscale+'
    option name 'tailscale'
    option src 'wan'
    option input 'ACCEPT'
    option forward 'REJECT'
    option output 'REJECT'
"

# File path
FILE_PATH="/etc/config/firewall"

# Check if the configuration block already exists in the file
existing_block="false"
while IFS= read -r line; do
    if [[ "$line" == "config zone" ]]; then
        if IFS= read -r next_line && [[ "$next_line" == "    option device 'tailscale+'" ]]; then
            if IFS= read -r next_line && [[ "$next_line" == "    option name 'tailscale'" ]]; then
                existing_block="true"
                break
            fi
        fi
    fi
done < "$FILE_PATH"

if [ "$existing_block" == "true" ]; then
    echo "Configuration block already exists in $FILE_PATH."
else
    # Append the configuration block to the file
    echo "$CONFIG_BLOCK" >> "$FILE_PATH"
    echo "Configuration block added to $FILE_PATH."
fi

echo "Enabling and starting the Tailscale service"
/etc/init.d/tailscale enable
/etc/init.d/tailscale start

echo "."
echo "."
echo "."

echo "Executing the Tailscale UP command and pre-authentication with the Auth key"
# Extract the first three octets from NETWORK_ADDRESS
THREE_OCTETS=$(echo "$NETWORK_ADDRESS" | cut -d '.' -f 1-3)
tailscale up --advertise-routes="${THREE_OCTETS}.0/24" --accept-dns=false --advertise-tags="tag:char-routers"
echo "."
echo "."
echo "."
echo "The setup has completed, review the output above for any issues."
echo "A reboot is required to finalise the installation."
echo "Then the Teltonika router will be ready for testing and production use - it will automatically connect to Tailscale upon reboot."
echo "."
echo "."
echo "."
read -n 1 -s -r -p "Press any key to reboot the Teltonika router..."
reboot
