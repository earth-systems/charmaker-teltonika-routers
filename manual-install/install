#!/bin/sh

clear
echo "."
echo "."
echo "."

# Prompt for Tailscale version to install or use default
echo "Firstly, check the Tailscale version to install on this router, this can be found at:"
echo "https://pkgs.tailscale.com/stable/#static   under Static Binaries > ARM"
while true; do
    read -p "Enter the Tailscale version to install (current used is: 1.40.1, enter this version if unsure):" TAILSCALE_VERSION
    # Check if the Tailscale package exists using curl HEAD request
    if curl --output /dev/null --silent --head --fail "https://pkgs.tailscale.com/stable/tailscale_${TAILSCALE_VERSION}_arm.tgz"; then
        break  # Break the loop if the package exists
    else
        echo "Tailscale package version not found. Please enter a valid version."
    fi
done
echo "."

# Sets a var for the local IP address of the router and pulls out the third octet for the Tailscale up command later on
LOCAL_IPv4=$(route -n | awk '$8 == "br-lan" && $1 ~ /^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$/ {print $1}')
THIRD_OCTET=$(echo "$LOCAL_IPv4" | cut -d '.' -f 3)

# Print the details back to the user
clear
echo "."
echo "."
echo "."
echo "Now we are ready to install Tailscale and configure it for the Charmaker network."
echo "."
echo "Check the details below before proceeding:"
echo " - Teltonika router IP Address: ${LOCAL_IPv4}"
echo " - Tailscale version to download install: ${TAILSCALE_VERSION}"
echo " - Tailscale package URL: https://pkgs.tailscale.com/stable/tailscale_${TAILSCALE_VERSION}_arm.tgz"
echo " - Tailscale subnet-router address: 172.20.${THIRD_OCTET}.0/24"
echo "."
echo "."
echo "."
read -n 1 -s -r -p "Press any key to proceed with the installation or CTRL+C to exit..."

# Quick cleanup first of old files.
rm -f "/tmp/tailscale.tgz"
rm -f "/tailscale.tgz"
rm -f "/usr/bin/tailscale"
rm -f "/usr/bin/tailscaled"
rm -f "/etc/init.d/tailscale"

# Define the GitHub repository URL for the init Tailscale startup script
GITHUB_REPO_URL="https://raw.githubusercontent.com/earth-systems/charmaker-teltonika-routers/main/manual-install/serviceinit"

# Set the default dir to root and make tmp dir
cd /
# Check if 'tmp' folder exists
if [ ! -d "tmp" ]; then
    # Create the 'tmp' folder if it doesn't exist
    mkdir tmp
    echo "'tmp' folder created."
fi

echo "Downloading the Tailscale package"
curl "https://pkgs.tailscale.com/stable/tailscale_${TAILSCALE_VERSION}_arm.tgz" --output tailscale.tgz

echo "Extracting the contents of the downloaded package"
tar x -zvC /tmp -f tailscale.tgz

echo "Removing the downloaded tarball"
rm -f tailscale.tgz

echo "Copying the Tailscale binaries to /usr/bin"
cd tmp
cd "tailscale_${TAILSCALE_VERSION}_arm"
cp tailscale /usr/bin
cp tailscaled /usr/bin

echo "Setting permissions for the Tailscale binaries and the init script"
chmod 775 /usr/bin/tailscale
chmod 775 /usr/bin/tailscaled

echo "Cleaning up and removing the extracted directory to save space"
cd /
cd tmp
rm "tailscale_${TAILSCALE_VERSION}_arm" -R

echo "Downloading the initilization script from github and saving it to /etc/init.d/tailscale"
curl -L "${GITHUB_REPO_URL}" --output /etc/init.d/tailscale

echo "Setting permissions for the init script"
chmod 775 /etc/init.d/tailscale

echo "Updating package lists and installing necessary packages"
opkg update
opkg install libustream-openssl ca-bundle kmod-tun
echo "Required packages have been installed, ignore errors above for the Luci and Vuci package, and kernel errors"

echo "Appending lines to the existing /etc/config/firewall file to allow Tailscale to connect"
# First we define the block of code for the firewall config we need to set.
CONFIG_BLOCK="
config zone
    option device 'tailscale+'
    option name 'tailscale'
    option src 'wan'
    option input 'ACCEPT'
    option forward 'REJECT'
    option output 'REJECT'
"

# File path
FILE_PATH="/etc/config/firewall"

# Adds the firewall rule without checking.
echo "$CONFIG_BLOCK" >> "$FILE_PATH"

echo "Enabling and starting the Tailscale service"
/etc/init.d/tailscale enable
/etc/init.d/tailscale start

echo "."
echo "."
echo "."

echo "Executing the Tailscale UP command"
tailscale up --advertise-routes="172.20.${THIRD_OCTET}.0/24" --accept-dns=false --advertise-tags="tag:char-routers"
echo "."
echo "."
echo "."
echo "The setup has completed, review the output above for any issues."
echo "A reboot is required to finalise the installation."
echo "."
echo "."
echo "."
read -n 1 -s -r -p "Press any key to reboot the router..."
reboot
